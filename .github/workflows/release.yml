name: Build, Release & Publish

on:
  push:
    # only tag‐pushes; drop the branch‐push filter entirely
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Stamp version.txt from Git tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Strip leading "v": e.g. v1.2.3 → 1.2.3
          echo "${VERSION#v}" > version.txt

      - name: Install packaging tools
        run: pip install --upgrade pip setuptools wheel

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish distributions to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create the Release if it doesn't exist, then upload the artifacts
          gh release view "$VERSION" >/dev/null 2>&1 || \
            gh release create "$VERSION" --title "$VERSION" --notes "Automated build for $VERSION"
          gh release upload "$VERSION" \
            "dist/libversion-${VERSION#v}.tar.gz" \
            "dist/libversion-${VERSION#v}-py3-none-any.whl" \
            --clobber

      - name: Bump to next pre-release on main
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${VERSION#v}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$TAG"
          NEXT_PATCH=$((PATCH + 1))
          PREVER="$MAJOR.$MINOR.$NEXT_PATCH-pre"

          # Switch to main, update version.txt, and push
          git fetch origin main
          git checkout main
          echo "$PREVER" > version.txt
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m "Bump version to $PREVER for next pre-release [skip ci]" || echo "No changes to commit"
          git push origin main
